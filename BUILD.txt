Build system: 

JDK required: 1.5+
Maven (http://maven.apache.org) required: 2.0.8+
JRuby (http://jruby.codehaus.org) required: 1.0.2+

Build profiles:  

- default: builds all releasable modules
- reporting:  builds reports
- distribution:  builds distribution
- integration:  builds integration tests
- nt: no-test: builds skipping unit tests 
- examples:  builds examples (using profile [jetty|tomcat|geronimo] copies example wars upon install to the appropriate deploy dir)

Note:  profiles are additive and the default profile is always active.
Eg, build with integration tests, reporting and distribution:

mvn -Pintegration,reporting,distribution install

Build and deploy examples to Jetty (skipping tests on releasable modules):

mvn -Pnt,examples,jetty install

IMPORTANT NOTE ON REPOSITORIES: 
Some dependencies are not synched with central maven repo.  
Rather than configuring lots of remote repositories to the root POM, which implies lots of redundant lookups to several remote servers, 
it is the responsibility of the user building the code to ensure that these are configured in the user ~/.m2/settings.xml, as profiles, 
and then build (just once) with the corresponding profiles to retrieve the dependency.  

A template of ~/.m2/settings.xml is found in http://svn.codehaus.org/waffle/trunk/waffle-distribution/src/config/settings.xml

A good practice is to leave a note next to dependency declaration where it is found, if not in central repo.
Another option is to define a waffle profile with all the remote repositories needed by project and activate it on demand.

Eg to build with openqa profile (for selenium):

mvn clean install -Popenqa

Similar reasoning for snapshots.  Eg to build using codehaus snapshots (say for picocontainer):

mvn clean install -Pcodehaus


