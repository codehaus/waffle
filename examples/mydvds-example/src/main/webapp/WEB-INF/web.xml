<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>Waffle MyDVD Example</display-name>

    <context-param>
        <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
        <param-value>ApplicationResources</param-value>
    </context-param>

    <!-- 1. This is how PicoContainer-Web registers composition class -->
    <context-param>
        <param-name>webapp-composer-class</param-name>
        <param-value>org.codehaus.waffle.example.mydvds.MyDvdsWebappComposer</param-value>
    </context-param>

    <!-- 3. Waffle context listener (ServletContext and HttpSession) -->
    <listener>
        <listener-class>org.codehaus.waffle.servlet.WaffleListener</listener-class>
    </listener>

    <!-- 4. Waffle request filter (responsible for request level context) -->
    <filter>
        <filter-name>WaffleRequestFilter</filter-name>
        <filter-class>org.codehaus.waffle.servlet.WaffleServlet$ServletFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>WaffleRequestFilter</filter-name>
        <url-pattern>*.waffle</url-pattern>
    </filter-mapping>

    <!-- 5. Register Waffle's FrontController servlet -->
    <servlet>
        <servlet-name>waffle</servlet-name>
        <servlet-class>org.codehaus.waffle.servlet.WaffleServlet</servlet-class>
        <init-param>
            <param-name>view.suffix</param-name>
            <param-value>.jspx</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>waffle</servlet-name>
        <url-pattern>*.waffle</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index.jspx</welcome-file>
    </welcome-file-list>
</web-app>
